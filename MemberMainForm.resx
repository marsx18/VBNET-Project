<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Sf0/a+O9QpjwqnoAAAAASUVORK5CYII=
</value>
  </data>
</root>